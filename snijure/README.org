
* TODO stuff to do [0%]

** TODO agent code [0%]
*** TODO interface of the callback [60%]
**** DONE before [100%]
CLOSED: [2012-08-14 Tue 18:01]
***** DONE method (fully qualified name) [%]
CLOSED: [2012-08-14 Tue 17:54]
***** DONE arguments [%]
CLOSED: [2012-08-14 Tue 18:01]
**** DONE after [100%]
CLOSED: [2012-08-14 Tue 18:08]
***** DONE result [%]
CLOSED: [2012-08-14 Tue 18:08]
**** DONE afterThrow [%]
CLOSED: [2012-08-14 Tue 18:33]

**** TODO add the id of the current thread to all the methods



*** TODO add the start of swank in a different thread when the agent is "activated"

** TODO add a way to inject the callback to the agent
** TODO solve the "aop will intercept anything" problem [%]

* TODO ideas [%]

** TODO allow to alter args / return values / exceptions (or even don't throw the exception)

It would be straightforward to change the signature of the Callback, and
the agent code to allow:
- Changing the parameters passed to the intercepted method: Just make
  =before= returns an array of params
- Changing the return value of the intercepted method: just make =after=
  returns a (possibly) modified return value
- Changing the exception, or even changing it to no exception and return
  value instead: just change =afterThrow= to returns an (possibly
  modified) exception (and maybe an additionnal flag to indicate that we
  want to change the exception by a normal return value)
